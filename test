import os
import sys
import glob
import csv
import pymysql.cursors

def insert_status(status):
    host = os.environ['RDS_HOST']
    user = os.environ['RDS_USER']
    password = os.environ['RDS_PASSWORD']
    database = 'mydatabase'  # hardcoded database name

    connection = pymysql.connect(
        host=host,
        user=user,
        password=password,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            cursor.execute("CREATE DATABASE IF NOT EXISTS {};".format(database))
            cursor.execute("USE {};".format(database))
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS result_data (
                    status VARCHAR(255),
                    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                );
            """)
            sql = "INSERT INTO result_data (status, timestamp) VALUES (%s, NOW())"
            cursor.execute(sql, (status,))
        connection.commit()
    finally:
        connection.close()

def fetch_data():
    host = os.environ['RDS_HOST']
    user = os.environ['RDS_USER']
    password = os.environ['RDS_PASSWORD']
    database = 'mydatabase'

    connection = pymysql.connect(
        host=host,
        user=user,
        password=password,
        cursorclass=pymysql.cursors.DictCursor
    )

    try:
        with connection.cursor() as cursor:
            cursor.execute("USE {};".format(database))
            cursor.execute("SELECT status FROM result_data ORDER BY timestamp DESC;")
            result = cursor.fetchall()
            for row in result:
                print(row['status'])
    finally:
        connection.close()

if __name__ == "__main__":
    for filename in glob.glob('result-*.txt'):
        with open(filename, 'r') as f:
            reader = csv.reader(f)
            for row in reader:
                if len(row) == 5:
                    insert_status(row[4])
                else:
                    print(f'Invalid row in {filename}: {row}', file=sys.stderr)
    fetch_data()
